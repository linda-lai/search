hello world


var users = [{id: 1, ...}, {id: 2, ...}]



users.find(user => user.id == 1)

O(n) in the worst case we will go through every element once




------------------------

var users_by_id = new Map({
  1: {name: "Logan", ...},
  2: {name: "Linda", ...}
})

users.get(1)

O(1)

-----------------------

"logan" -> hash("logan") -> 34878

34878 => age:33

-----------------------

{value: "Logan",
 next: {value: "Linda",
        next: null}}

--------------------

O(logn)


                 "logan"
      /          /     \       \
"Apple"        "Linda"    "Zebra"  "zzzebra"



======================

User logan = {
  name: "Logan"
}



indexOfUsers = new Map({
  1: 
})


users_by_id = {1: {}}
users_by_name
users_by_role = {"admin": [{}, {}]}


users_by_id.values() => [{}, {}]
.filter(user => user.role == "admin") => [{}, {}]


=====================

function printOrganisation(organisation) {
  val id = organisation.id;
  val tickets = tickets_by_org_id.get(id);

}

function printTicket(ticket) {
  val org = orgs_by_id.get(ticket.org_id);
}

Index things based on the attribute that you will use to retrieve it.

===

========================================

- Treat data as data
  - Schema optional
- Object modelling
